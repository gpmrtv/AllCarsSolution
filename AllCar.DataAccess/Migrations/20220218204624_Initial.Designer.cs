// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using AllCar.DataAccess.Context;

#nullable disable

namespace AllCar.DataAccess.Migrations
{
    [DbContext(typeof(SqlEfContext))]
    [Migration("20220218204624_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AllCar.Shared.Entities.CarEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("BodyNum")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("BodyNum");

                    b.Property<string>("ChassisNum")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("ChassisNum");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("CreatedUserId");

                    b.Property<int>("DealerId")
                        .HasColumnType("integer")
                        .HasColumnName("DealerId");

                    b.Property<string>("EngineNum")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("EngineNum");

                    b.Property<string>("Notes")
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)")
                        .HasColumnName("Notes");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDateTime");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("UpdatedUserId");

                    b.Property<string>("Vin")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("Vin");

                    b.Property<short>("Year")
                        .HasColumnType("smallint")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("Cars", (string)null);
                });

            modelBuilder.Entity("AllCar.Shared.Entities.DealerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("CreatedUserId");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDateTime");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("Dealers", (string)null);
                });

            modelBuilder.Entity("AllCar.Shared.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedDateTime");

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("CreatedUserId");

                    b.Property<int>("DealerId")
                        .HasColumnType("integer")
                        .HasColumnName("DealerId");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedDateTime");

                    b.Property<int?>("UpdatedUserId")
                        .HasColumnType("integer")
                        .HasColumnName("UpdatedUserId");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
